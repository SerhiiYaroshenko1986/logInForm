{"version":3,"sources":["App.js","index.js"],"names":["App","initialValues","email","password","check","validationSchema","Yup","shape","required","min","oneOf","onSubmit","fields","alert","render","errors","touched","status","className","props","name","placeholder","type","component","htmlFor","React","Component","Form","ReactDOM","document","getElementById"],"mappings":"8QAuDeA,E,iLAjDD,IAAD,OACL,OACI,kBAAC,IAAD,CACIC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,MAAM,IAEVC,iBAAkBC,MAAaC,MAAM,CACjCL,MAAOI,MACFJ,MAAM,oBACNM,SAAS,0CACdL,SAAUG,MACLG,IAAI,EAAG,0CACPD,SAAS,6CACbJ,MAAOE,MAENI,MAAM,EAAC,GAAO,oCACdF,SAAS,sCAEfG,SAAU,SAAAC,GACNC,MAAM,kBAEVC,OAAQ,gBAAGC,EAAH,EAAGA,OAAgBC,GAAnB,EAAWC,OAAX,EAAmBD,SAAnB,OACJ,kBAAC,IAAD,KACI,yBAAKE,UAAU,UAAU,EAAKC,MAAMC,MACpC,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAAOE,KAAK,QAAQC,YAAY,qBAAqBC,KAAK,OAAOJ,UAAW,gBAAkBH,EAAOb,OAASc,EAAQd,MAAQ,cAAgB,MAC9I,kBAAC,IAAD,CAAckB,KAAK,QAAQG,UAAU,MAAML,UAAU,sBAEzD,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAOE,KAAK,WAAYC,YAAY,WAAWC,KAAK,WAAWJ,UAAW,gBAAkBH,EAAOZ,UAAYa,EAAQb,SAAW,cAAgB,MAClJ,kBAAC,IAAD,CAAciB,KAAK,WAAWG,UAAU,MAAML,UAAU,sBAE5D,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAOE,KAAK,QAAQE,KAAK,aAAa,2BAAOE,QAAQ,SAAf,2BACtC,kBAAC,IAAD,CAAcJ,KAAK,QAAQG,UAAU,MAAML,UAAU,sBAEzD,yBAAKA,UAAU,uBACX,4BAAQI,KAAK,SAASJ,UAAU,wBAAhC,UACA,4BAAQI,KAAK,QAAQJ,UAAU,qBAA/B,kB,GA1CVO,IAAMC,WCAlBC,E,iLAEA,OACE,yBAAKT,UAAU,QACX,kBAAC,EAAD,CAAKE,KAAM,iC,GAJJK,IAAMC,WAYvBE,IAASd,OACP,kBAAC,EAAD,MACAe,SAASC,eAAe,W","file":"static/js/main.23696cd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nclass App extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{                  \r\n                    email: '',\r\n                    password: '',                  \r\n                    check:''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('You must type your email in this field'),\r\n                    password: Yup.string()\r\n                        .min(6, 'Password must be at least 6 characters')\r\n                        .required('You must type your password in this field'),\r\n                     check: Yup\r\n                     .boolean()                     \r\n                     .oneOf([true], 'Must Accept Terms and Conditions')\r\n                     .required('Must Accept Terms and Conditions')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)')\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"header\">{this.props.name}</div>\r\n                        <div className=\"form-group\">                           \r\n                            <Field name=\"email\" placeholder=\"youremail@mail.com\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">                           \r\n                            <Field name=\"password\"  placeholder=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>                      \r\n                        <div className=\"form-group\">                            \r\n                            <Field name=\"check\" type=\"checkbox\" /><label htmlFor=\"check\">I agree with everything</label>\r\n                            <ErrorMessage name=\"check\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group form-btn\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">SUBMIT</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">RESET</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App' \r\nclass Form extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"form\">         \r\n            <App name={\"SIGN IN TO YOUR ACCOUNT\"} />          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Form />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}